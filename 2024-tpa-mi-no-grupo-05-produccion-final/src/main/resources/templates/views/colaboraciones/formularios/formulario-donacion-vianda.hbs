{{> templates/base}}
{{#block "contenido"}}
    <section class="container my-5">
        <h2 class="text-center mb-4">Donación de vianda</h2>
        <div class="row">
            <!-- Columna del mapa -->
            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Selecciona una Heladera</h5>
                        <div id="map" style="height: 400px; width: 100%;"></div>
                        <div class="mt-3">
                            <p class="mb-2"><strong>Heladera seleccionada:</strong> <span
                                    id="selectedFridge">Ninguna</span></p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Columna del formulario -->
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title mb-4">Formulario de Donación de Viandas</h5>
                        <form action="/donacion-vianda" method="POST">
                            <div class="mb-3">
                                <label for="foodDescription" class="form-label">Descripción de la Comida</label>
                                <input type="text" class="form-control" id="foodDescription" name="foodDescription"
                                       required>
                            </div>

                            <div class="mb-3">
                                <label for="expirationDate" class="form-label">Fecha de Caducidad</label>
                                <input type="date" class="form-control" id="expirationDate" name="expirationDate"
                                       required>
                            </div>

                            <div class="mb-3">
                                <label for="fridgeLocation" class="form-label">Heladera Seleccionada</label>
                                <input type="text" class="form-control" id="fridgeLocation" name="fridgeLocation"
                                       readonly required>
                                <!-- Campo oculto para el ID de la heladera -->
                                <input type="hidden" id="fridgeId" name="fridgeId">
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="calories" class="form-label">Calorías (opcional)</label>
                                    <input type="number" class="form-control" id="calories" name="calories">
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label for="weight" class="form-label">Peso en gramos (opcional)</label>
                                    <input type="number" class="form-control" id="weight" name="weight">
                                </div>
                            </div>

                            <button type="submit" class="btn btn-primary">Registrar Donación</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <script>
        const fridges = {{{json heladeras}}};
    </script>
    <script>(g => {
        var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__",
                m = document, b = window;
        b = b[c] || (b[c] = {});
        var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams,
                u = () => h || (h = new Promise(async (f, n) => {
                    await (a = m.createElement("script"));
                    e.set("libraries", [...r] + "");
                    for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]);
                    e.set("callback", c + ".maps." + q);
                    a.src = `https://maps.${c}apis.com/maps/api/js?` + e;
                    d[q] = f;
                    a.onerror = () => h = n(Error(p + " could not load."));
                    a.nonce = m.querySelector("script[nonce]")?.nonce || "";
                    m.head.append(a)
                }));
        d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n))
    })
    ({key: "AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg", v: "weekly"});</script>
    <script>
        let map;
        let selectedMarker = null;

        async function initMap() {
            const {Map} = await google.maps.importLibrary("maps");
            const {AdvancedMarkerElement} = await google.maps.importLibrary("marker");

            map = new Map(document.getElementById("map"), {
                center: {lat: -34.6078, lng: -58.4462},
                zoom: 12.3,
                mapId: "4504f8b37365c3d0"
            });

            fridges.forEach(fridge => {
                const marker = new AdvancedMarkerElement({
                    map,
                    position: {lat: parseFloat(fridge.latitude), lng: parseFloat(fridge.longitude)},
                    title: fridge.name,
                });

                marker.addListener("click", () => {
                    if (selectedMarker) {
                        selectedMarker.setMap(map);
                    }
                    selectedMarker = marker;

                    // Actualizar la UI y los campos del formulario
                    document.getElementById("selectedFridge").textContent = fridge.name;
                    document.getElementById("fridgeLocation").value = fridge.name;
                    document.getElementById("fridgeId").value = fridge.id;
                });
            });
        }

        // Inicializar el mapa
        initMap();

        // Establecer fecha actual en el campo de fecha de donación
        document.getElementById("donationDate").value = new Date().toISOString().split('T')[0];
    </script>
{{/block}}